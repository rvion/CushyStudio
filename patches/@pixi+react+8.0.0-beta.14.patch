diff --git a/node_modules/@pixi/react/types/constants/NameOverrides.d.ts b/node_modules/@pixi/react/types/constants/NameOverrides.d.ts
index 8833b0c..18a1d78 100644
--- a/node_modules/@pixi/react/types/constants/NameOverrides.d.ts
+++ b/node_modules/@pixi/react/types/constants/NameOverrides.d.ts
@@ -5,5 +5,6 @@ declare const NameOverrides: Readonly<{
     HTMLTextStyle: "htmlTextStyle";
     HTMLTextSystem: "htmlTextSystem";
     IGLUniformData: "iglUniformData";
+    Color: 'pixiColor';
 }>;
 export { NameOverrides };
diff --git a/node_modules/@pixi/react/types/global.d.ts b/node_modules/@pixi/react/types/global.d.ts
index dedc223..43a62ed 100644
--- a/node_modules/@pixi/react/types/global.d.ts
+++ b/node_modules/@pixi/react/types/global.d.ts
@@ -1,8 +1,8 @@
 import type { NamespacedPixiElements } from './typedefs/NamespacedPixiElements';
-import type { PixiElements } from './typedefs/PixiElements';
+// import type { PixiElements } from './typedefs/PixiElements';
 declare global {
     namespace JSX {
-        interface IntrinsicElements extends PixiElements, NamespacedPixiElements {
+        interface IntrinsicElements extends /* PixiElements, */ NamespacedPixiElements {
         }
     }
 }
diff --git a/node_modules/@pixi/react/types/typedefs/PixiElements.d.ts b/node_modules/@pixi/react/types/typedefs/PixiElements.d.ts
index 23a1ee5..5b728eb 100644
--- a/node_modules/@pixi/react/types/typedefs/PixiElements.d.ts
+++ b/node_modules/@pixi/react/types/typedefs/PixiElements.d.ts
@@ -2,6 +2,10 @@ import type * as PIXI from 'pixi.js';
 import type { NameOverrides } from '../constants/NameOverrides';
 import type { PixiComponents } from './PixiComponents';
 import type { PixiReactElementProps } from './PixiReactNode';
+
 export type PixiElements = {
-    [K in PixiComponents as K extends keyof typeof NameOverrides ? typeof NameOverrides[K] : Uncapitalize<K>]: PixiReactElementProps<typeof PIXI[K]>;
+    [K in PixiComponents as K extends keyof typeof NameOverrides //
+        ? typeof NameOverrides[K]
+        : Uncapitalize<K>
+    ]: PixiReactElementProps<typeof PIXI[K]>;
 };
