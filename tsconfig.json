{
    "$schema": "http://json.schemastore.org/tsconfig",
    "compilerOptions": {
        "target": "ESNext",
        "useDefineForClassFields": false,
        "lib": ["DOM", "DOM.Iterable", "ESNext"],
        "allowJs": false,
        "skipLibCheck": false,
        // https://stackoverflow.com/questions/53113031/how-to-see-a-fully-expanded-typescript-type-without-n-more-and
        // "noErrorTruncation": true,
        "incremental": true,
        "noImplicitAny": true,
        "esModuleInterop": true,
        "allowSyntheticDefaultImports": true,
        "strict": true,
        "strictFunctionTypes": true,
        "forceConsistentCasingInFileNames": true,
        "strictNullChecks": true,
        "noUncheckedIndexedAccess": true,
        "module": "ESNext",
        "moduleResolution": "Node",
        "resolveJsonModule": true,
        "isolatedModules": true,
        "jsx": "react-jsx",
        // "baseUrl": ".",
        "typeRoots": ["src/typings"],
        "types": [],
        "paths": {
            // overrides
            "nsfwjs": ["./src/typings/nsfwjs.d.ts"],

            // emptied
            "typescript": ["./src/typings/empty-types.d.ts"],
            "webgl2": ["./src/typings/empty-types.d.ts"],
            "@tensorflow/tfjs": ["./src/typings/empty-types.d.ts"],
            "@types/webgl": ["./src/typings/empty-types.d.ts"],
            "@types/webgl-ext": ["./src/typings/empty-types.d.ts"],
            "@use-gesture/react": ["./src/typings/empty-types.d.ts"]
        },
        // -------------// -------------
        /* specific to base */ "tsBuildInfoFile": ".tsbuildinfo",
        /* specific to base */ "noEmit": true
    },

    "include": ["src", "schema/global.d.ts" /*  "library" */],
    "exclude": []
}
