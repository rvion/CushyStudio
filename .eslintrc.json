{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 6,
        "sourceType": "module",
        "project": "./tsconfig.json"
    },
    "plugins": ["@typescript-eslint", "unused-imports"],
    "rules": {
        "no-restricted-properties": [
            "error",
            {
                "object": "window",
                "property": "addEventListener",
                "message": "Please use 'window_addEventListener' instead of 'window.addEventListener'."
            }
        ],
        // "no-restricted-imports": [
        //     "error",
        //     {
        //         "paths": [
        //             {
        //                 "name": "mobx",
        //                 "importNames": ["makeAutoObservable"],
        //                 "message": "Please use 'makeAutoObservableV2' instead of 'makeAutoObservable' from 'mobx'."
        //             }
        //         ]
        //     }
        // ],
        "@typescript-eslint/naming-convention": "off",
        "unused-imports/no-unused-imports": "error",
        "@typescript-eslint/semi": "off",
        "curly": "off",
        "eqeqeq": "off",
        "no-throw-literal": "warn",
        "semi": "off",
        "@typescript-eslint/prefer-as-const": "off",
        // https://typescript-eslint.io/rules/no-floating-promises
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-this-alias": "off", // sometimes, we need to preserve this.
        "@typescript-eslint/explicit-function-return-type": "error",
        "consistent-this": [2, "self", "that"] // as a paliative solution to above permissive rule
    },
    "ignorePatterns": [
        //
        "out",
        "dist",
        "release",
        "**/*.d.ts",
        "**/*.js",
        "src/scripts"
    ]
}
